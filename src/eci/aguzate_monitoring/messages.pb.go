// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: messages.proto

package aguzate_monitoring

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Location struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Latitude  float32 `protobuf:"fixed32,1,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude float32 `protobuf:"fixed32,2,opt,name=longitude,proto3" json:"longitude,omitempty"`
}

func (x *Location) Reset() {
	*x = Location{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Location) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Location) ProtoMessage() {}

func (x *Location) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Location.ProtoReflect.Descriptor instead.
func (*Location) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{0}
}

func (x *Location) GetLatitude() float32 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *Location) GetLongitude() float32 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

type BikeLocation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BikeId   string    `protobuf:"bytes,1,opt,name=bikeId,proto3" json:"bikeId,omitempty"`
	Location *Location `protobuf:"bytes,2,opt,name=location,proto3" json:"location,omitempty"`
}

func (x *BikeLocation) Reset() {
	*x = BikeLocation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BikeLocation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BikeLocation) ProtoMessage() {}

func (x *BikeLocation) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BikeLocation.ProtoReflect.Descriptor instead.
func (*BikeLocation) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{1}
}

func (x *BikeLocation) GetBikeId() string {
	if x != nil {
		return x.BikeId
	}
	return ""
}

func (x *BikeLocation) GetLocation() *Location {
	if x != nil {
		return x.Location
	}
	return nil
}

type Bike struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BikeId string `protobuf:"bytes,1,opt,name=bikeId,proto3" json:"bikeId,omitempty"`
	Size   string `protobuf:"bytes,2,opt,name=size,proto3" json:"size,omitempty"`
	Color  string `protobuf:"bytes,3,opt,name=color,proto3" json:"color,omitempty"`
}

func (x *Bike) Reset() {
	*x = Bike{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Bike) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bike) ProtoMessage() {}

func (x *Bike) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bike.ProtoReflect.Descriptor instead.
func (*Bike) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{2}
}

func (x *Bike) GetBikeId() string {
	if x != nil {
		return x.BikeId
	}
	return ""
}

func (x *Bike) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

func (x *Bike) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bikes []*Bike `protobuf:"bytes,1,rep,name=bikes,proto3" json:"bikes,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{3}
}

func (x *User) GetBikes() []*Bike {
	if x != nil {
		return x.Bikes
	}
	return nil
}

type GetBikesByUserIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *GetBikesByUserIdRequest) Reset() {
	*x = GetBikesByUserIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBikesByUserIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBikesByUserIdRequest) ProtoMessage() {}

func (x *GetBikesByUserIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBikesByUserIdRequest.ProtoReflect.Descriptor instead.
func (*GetBikesByUserIdRequest) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{4}
}

func (x *GetBikesByUserIdRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type UpdateBikeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Bike   *Bike  `protobuf:"bytes,2,opt,name=bike,proto3" json:"bike,omitempty"`
}

func (x *UpdateBikeRequest) Reset() {
	*x = UpdateBikeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateBikeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBikeRequest) ProtoMessage() {}

func (x *UpdateBikeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBikeRequest.ProtoReflect.Descriptor instead.
func (*UpdateBikeRequest) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateBikeRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdateBikeRequest) GetBike() *Bike {
	if x != nil {
		return x.Bike
	}
	return nil
}

type GetBikeLocationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	BikeId string `protobuf:"bytes,2,opt,name=bikeId,proto3" json:"bikeId,omitempty"`
}

func (x *GetBikeLocationRequest) Reset() {
	*x = GetBikeLocationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBikeLocationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBikeLocationRequest) ProtoMessage() {}

func (x *GetBikeLocationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBikeLocationRequest.ProtoReflect.Descriptor instead.
func (*GetBikeLocationRequest) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{6}
}

func (x *GetBikeLocationRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetBikeLocationRequest) GetBikeId() string {
	if x != nil {
		return x.BikeId
	}
	return ""
}

type BikeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bike *Bike `protobuf:"bytes,1,opt,name=bike,proto3" json:"bike,omitempty"`
}

func (x *BikeResponse) Reset() {
	*x = BikeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BikeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BikeResponse) ProtoMessage() {}

func (x *BikeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BikeResponse.ProtoReflect.Descriptor instead.
func (*BikeResponse) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{7}
}

func (x *BikeResponse) GetBike() *Bike {
	if x != nil {
		return x.Bike
	}
	return nil
}

type BikeLocationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Location *BikeLocation `protobuf:"bytes,1,opt,name=location,proto3" json:"location,omitempty"`
}

func (x *BikeLocationResponse) Reset() {
	*x = BikeLocationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BikeLocationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BikeLocationResponse) ProtoMessage() {}

func (x *BikeLocationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BikeLocationResponse.ProtoReflect.Descriptor instead.
func (*BikeLocationResponse) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{8}
}

func (x *BikeLocationResponse) GetLocation() *BikeLocation {
	if x != nil {
		return x.Location
	}
	return nil
}

var File_messages_proto protoreflect.FileDescriptor

var file_messages_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x44, 0x0a, 0x08, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08,
	0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08,
	0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67,
	0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x6c, 0x6f, 0x6e,
	0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x22, 0x4d, 0x0a, 0x0c, 0x42, 0x69, 0x6b, 0x65, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x69, 0x6b, 0x65, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x69, 0x6b, 0x65, 0x49, 0x64, 0x12, 0x25,
	0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x09, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x48, 0x0a, 0x04, 0x42, 0x69, 0x6b, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x62, 0x69, 0x6b, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62,
	0x69, 0x6b, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c,
	0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x22,
	0x23, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x05, 0x62, 0x69, 0x6b, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x42, 0x69, 0x6b, 0x65, 0x52, 0x05, 0x62,
	0x69, 0x6b, 0x65, 0x73, 0x22, 0x31, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x42, 0x69, 0x6b, 0x65, 0x73,
	0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x46, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x42, 0x69, 0x6b, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x04, 0x62, 0x69, 0x6b, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x05, 0x2e, 0x42, 0x69, 0x6b, 0x65, 0x52, 0x04, 0x62, 0x69, 0x6b, 0x65, 0x22,
	0x48, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x42, 0x69, 0x6b, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x69, 0x6b, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x62, 0x69, 0x6b, 0x65, 0x49, 0x64, 0x22, 0x29, 0x0a, 0x0c, 0x42, 0x69, 0x6b,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x04, 0x62, 0x69, 0x6b,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x42, 0x69, 0x6b, 0x65, 0x52, 0x04,
	0x62, 0x69, 0x6b, 0x65, 0x22, 0x41, 0x0a, 0x14, 0x42, 0x69, 0x6b, 0x65, 0x4c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x08,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x42, 0x69, 0x6b, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x32, 0xc2, 0x01, 0x0a, 0x0b, 0x42, 0x69, 0x6b, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3d, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x42, 0x69,
	0x6b, 0x65, 0x73, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x2e, 0x47, 0x65,
	0x74, 0x42, 0x69, 0x6b, 0x65, 0x73, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0d, 0x2e, 0x42, 0x69, 0x6b, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x12, 0x2f, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x42, 0x69, 0x6b, 0x65, 0x12, 0x12, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x69, 0x6b,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0d, 0x2e, 0x42, 0x69, 0x6b, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x42, 0x69,
	0x6b, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x2e, 0x47, 0x65, 0x74,
	0x42, 0x69, 0x6b, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x42, 0x69, 0x6b, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x42, 0x18, 0x5a, 0x16,
	0x65, 0x63, 0x69, 0x2f, 0x61, 0x67, 0x75, 0x7a, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x6f, 0x6e, 0x69,
	0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_messages_proto_rawDescOnce sync.Once
	file_messages_proto_rawDescData = file_messages_proto_rawDesc
)

func file_messages_proto_rawDescGZIP() []byte {
	file_messages_proto_rawDescOnce.Do(func() {
		file_messages_proto_rawDescData = protoimpl.X.CompressGZIP(file_messages_proto_rawDescData)
	})
	return file_messages_proto_rawDescData
}

var file_messages_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_messages_proto_goTypes = []interface{}{
	(*Location)(nil),                // 0: Location
	(*BikeLocation)(nil),            // 1: BikeLocation
	(*Bike)(nil),                    // 2: Bike
	(*User)(nil),                    // 3: User
	(*GetBikesByUserIdRequest)(nil), // 4: GetBikesByUserIdRequest
	(*UpdateBikeRequest)(nil),       // 5: UpdateBikeRequest
	(*GetBikeLocationRequest)(nil),  // 6: GetBikeLocationRequest
	(*BikeResponse)(nil),            // 7: BikeResponse
	(*BikeLocationResponse)(nil),    // 8: BikeLocationResponse
}
var file_messages_proto_depIdxs = []int32{
	0, // 0: BikeLocation.location:type_name -> Location
	2, // 1: User.bikes:type_name -> Bike
	2, // 2: UpdateBikeRequest.bike:type_name -> Bike
	2, // 3: BikeResponse.bike:type_name -> Bike
	1, // 4: BikeLocationResponse.location:type_name -> BikeLocation
	4, // 5: BikeService.GetBikesByUserId:input_type -> GetBikesByUserIdRequest
	5, // 6: BikeService.UpdateBike:input_type -> UpdateBikeRequest
	6, // 7: BikeService.GetBikeLocation:input_type -> GetBikeLocationRequest
	7, // 8: BikeService.GetBikesByUserId:output_type -> BikeResponse
	7, // 9: BikeService.UpdateBike:output_type -> BikeResponse
	8, // 10: BikeService.GetBikeLocation:output_type -> BikeLocationResponse
	8, // [8:11] is the sub-list for method output_type
	5, // [5:8] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_messages_proto_init() }
func file_messages_proto_init() {
	if File_messages_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_messages_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Location); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BikeLocation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Bike); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBikesByUserIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateBikeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBikeLocationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BikeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BikeLocationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_messages_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_messages_proto_goTypes,
		DependencyIndexes: file_messages_proto_depIdxs,
		MessageInfos:      file_messages_proto_msgTypes,
	}.Build()
	File_messages_proto = out.File
	file_messages_proto_rawDesc = nil
	file_messages_proto_goTypes = nil
	file_messages_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// BikeServiceClient is the client API for BikeService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BikeServiceClient interface {
	GetBikesByUserId(ctx context.Context, in *GetBikesByUserIdRequest, opts ...grpc.CallOption) (BikeService_GetBikesByUserIdClient, error)
	UpdateBike(ctx context.Context, in *UpdateBikeRequest, opts ...grpc.CallOption) (*BikeResponse, error)
	GetBikeLocation(ctx context.Context, in *GetBikeLocationRequest, opts ...grpc.CallOption) (BikeService_GetBikeLocationClient, error)
}

type bikeServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewBikeServiceClient(cc grpc.ClientConnInterface) BikeServiceClient {
	return &bikeServiceClient{cc}
}

func (c *bikeServiceClient) GetBikesByUserId(ctx context.Context, in *GetBikesByUserIdRequest, opts ...grpc.CallOption) (BikeService_GetBikesByUserIdClient, error) {
	stream, err := c.cc.NewStream(ctx, &_BikeService_serviceDesc.Streams[0], "/BikeService/GetBikesByUserId", opts...)
	if err != nil {
		return nil, err
	}
	x := &bikeServiceGetBikesByUserIdClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type BikeService_GetBikesByUserIdClient interface {
	Recv() (*BikeResponse, error)
	grpc.ClientStream
}

type bikeServiceGetBikesByUserIdClient struct {
	grpc.ClientStream
}

func (x *bikeServiceGetBikesByUserIdClient) Recv() (*BikeResponse, error) {
	m := new(BikeResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *bikeServiceClient) UpdateBike(ctx context.Context, in *UpdateBikeRequest, opts ...grpc.CallOption) (*BikeResponse, error) {
	out := new(BikeResponse)
	err := c.cc.Invoke(ctx, "/BikeService/UpdateBike", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bikeServiceClient) GetBikeLocation(ctx context.Context, in *GetBikeLocationRequest, opts ...grpc.CallOption) (BikeService_GetBikeLocationClient, error) {
	stream, err := c.cc.NewStream(ctx, &_BikeService_serviceDesc.Streams[1], "/BikeService/GetBikeLocation", opts...)
	if err != nil {
		return nil, err
	}
	x := &bikeServiceGetBikeLocationClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type BikeService_GetBikeLocationClient interface {
	Recv() (*BikeLocationResponse, error)
	grpc.ClientStream
}

type bikeServiceGetBikeLocationClient struct {
	grpc.ClientStream
}

func (x *bikeServiceGetBikeLocationClient) Recv() (*BikeLocationResponse, error) {
	m := new(BikeLocationResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// BikeServiceServer is the server API for BikeService service.
type BikeServiceServer interface {
	GetBikesByUserId(*GetBikesByUserIdRequest, BikeService_GetBikesByUserIdServer) error
	UpdateBike(context.Context, *UpdateBikeRequest) (*BikeResponse, error)
	GetBikeLocation(*GetBikeLocationRequest, BikeService_GetBikeLocationServer) error
}

// UnimplementedBikeServiceServer can be embedded to have forward compatible implementations.
type UnimplementedBikeServiceServer struct {
}

func (*UnimplementedBikeServiceServer) GetBikesByUserId(*GetBikesByUserIdRequest, BikeService_GetBikesByUserIdServer) error {
	return status.Errorf(codes.Unimplemented, "method GetBikesByUserId not implemented")
}
func (*UnimplementedBikeServiceServer) UpdateBike(context.Context, *UpdateBikeRequest) (*BikeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateBike not implemented")
}
func (*UnimplementedBikeServiceServer) GetBikeLocation(*GetBikeLocationRequest, BikeService_GetBikeLocationServer) error {
	return status.Errorf(codes.Unimplemented, "method GetBikeLocation not implemented")
}

func RegisterBikeServiceServer(s *grpc.Server, srv BikeServiceServer) {
	s.RegisterService(&_BikeService_serviceDesc, srv)
}

func _BikeService_GetBikesByUserId_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GetBikesByUserIdRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(BikeServiceServer).GetBikesByUserId(m, &bikeServiceGetBikesByUserIdServer{stream})
}

type BikeService_GetBikesByUserIdServer interface {
	Send(*BikeResponse) error
	grpc.ServerStream
}

type bikeServiceGetBikesByUserIdServer struct {
	grpc.ServerStream
}

func (x *bikeServiceGetBikesByUserIdServer) Send(m *BikeResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _BikeService_UpdateBike_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateBikeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BikeServiceServer).UpdateBike(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/BikeService/UpdateBike",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BikeServiceServer).UpdateBike(ctx, req.(*UpdateBikeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BikeService_GetBikeLocation_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GetBikeLocationRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(BikeServiceServer).GetBikeLocation(m, &bikeServiceGetBikeLocationServer{stream})
}

type BikeService_GetBikeLocationServer interface {
	Send(*BikeLocationResponse) error
	grpc.ServerStream
}

type bikeServiceGetBikeLocationServer struct {
	grpc.ServerStream
}

func (x *bikeServiceGetBikeLocationServer) Send(m *BikeLocationResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _BikeService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "BikeService",
	HandlerType: (*BikeServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "UpdateBike",
			Handler:    _BikeService_UpdateBike_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetBikesByUserId",
			Handler:       _BikeService_GetBikesByUserId_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "GetBikeLocation",
			Handler:       _BikeService_GetBikeLocation_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "messages.proto",
}
